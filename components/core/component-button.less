// Name:            Button
// Description:     Defines styles for buttons
//
// Namespace:       `button`
//
// Modifiers:       `button--primary`
//                  `button--success`
//                  `button--danger`
//                  `button--link`
//                  `button--xs`
//                  `button--sm`
//                  `button--lg`
//                  `button--xl`
//
// States:          `is-active`
//                  `[disabled]`
//
// Dependencies:    vars-base
//
// Markup:
//
// <button class="button"></button>
//
// Based on:
//
// https://github.com/uikit/uikit/blob/v2.17.0/src/less/core/button.less
// https://github.com/uikit/uikit/blob/v2.17.0/themes/gradient/button.less
//
// ========================================================================


// Variables
// ========================================================================

@button-ns:                                     @ns;

@button-enable-base-style:                      true;
@button-enable-modifier-color:                  false;
@button-enable-modifier-size:                   false;
@button-enable-modifier-link:                   false;

@button-height:                                 @base-height;
@button-xsmall-height:                          @base-height-xsmall;
@button-small-height:                           @base-height-small;
@button-large-height:                           @base-height-large;
@button-xlarge-height:                          @base-height-xlarge;

@button-line-height:                            1.375;
@button-xsmall-line-height:                     @button-small-line-height;
@button-small-line-height:                      1.25;
@button-large-line-height:                      @button-line-height;
@button-xlarge-line-height:                     @button-line-height;

@button-font-size:                              @base-font-size;
@button-xsmall-font-size:                       11/@px;
@button-small-font-size:                        12/@px;
@button-large-font-size:                        16/@px;
@button-xlarge-font-size:                       18/@px;

@button-padding-horizontal:                     12/@px;
@button-xsmall-padding-horizontal:              6/@px;
@button-small-padding-horizontal:               10/@px;
@button-large-padding-horizontal:               15/@px;
@button-xlarge-padding-horizontal:              20/@px;

@button-padding-vertical:                       0;
@button-xsmall-padding-vertical:                0;
@button-small-padding-vertical:                 0;
@button-large-padding-vertical:                 0;
@button-xlarge-padding-vertical:                0;

@button-border-radius:                          0;
@button-font-family:                            inherit;
@button-font-weight:                            @base-normal-font-weight;
@button-text-transform:                         none;
@button-white-space:                            normal;

@button-background:                             @base-color-background-normal;
@button-color:                                  @base-color-text;
@button-hover-background:                       @base-color-background-normal-hover;
@button-hover-color:                            @base-color-text;
@button-active-background:                      @base-color-background-normal-active;
@button-active-color:                           @base-color-text;

@button-primary-background:                     @base-color-background-primary;
@button-primary-color:                          @base-color-text-inverse;
@button-primary-hover-background:               @base-color-background-primary-hover;
@button-primary-hover-color:                    @base-color-text-inverse;
@button-primary-active-background:              @base-color-background-primary-active;
@button-primary-active-color:                   @base-color-text-inverse;

@button-success-background:                     @base-color-background-success;
@button-success-color:                          @base-color-text-inverse;
@button-success-hover-background:               @base-color-background-success-hover;
@button-success-hover-color:                    @base-color-text-inverse;
@button-success-active-background:              @base-color-background-success-active;
@button-success-active-color:                   @base-color-text-inverse;

@button-danger-background:                      @base-color-background-danger;
@button-danger-color:                           @base-color-text-inverse;
@button-danger-hover-background:                @base-color-background-danger-hover;
@button-danger-hover-color:                     @base-color-text-inverse;
@button-danger-active-background:               @base-color-background-danger-active;
@button-danger-active-color:                    @base-color-text-inverse;

@button-disabled-background:                    @base-color-background-light;
@button-disabled-color:                         @base-color-text-muted;

@button-link-color:                             @base-color-text-link;
@button-link-hover-color:                       @base-color-text-link-hover;
@button-link-hover-text-decoration:             underline;
@button-link-disabled-color:                    @base-color-text-muted;


// ========================================================================
//   Component: Button
// ========================================================================

// 1. Correct inability to style clickable `input` types in iOS.
// 2. Remove padding, and margins in Chrome, Safari and Opera.
// 3. Remove borders for `button`.
// 4. Address `overflow` set to `hidden` in IE 8/9/10/11.
// 5. Correct `font` properties and `color` not being inherited for `button`.
// 6. Address inconsistent `text-transform` inheritance which is only inherit in Firefox and IE
// 7. Align text if button has a width.
// 8. Required for `a`.
// 9. Prevents text selection when click-mashing buttons.
// 10. Base styles.
// 11. Fix a Firefox 4+ bug whereby `input type="submit"` gains 2px extra padding

.mixin(button-reset) {
    // 1 
    -webkit-appearance: none;
    // 2 
    margin: 0;
    padding: 0;
    // 3 
    border: none;
    // 4 
    overflow: visible;
    // 5 
    -webkit-font-smoothing: inherit;
    font: inherit;
    color: inherit;
    // 6 
    text-transform: none;
    // 7
    text-align: center;    
    // 8 
    text-decoration: none;
    // 9
    user-select: none;
    // 10
    align-items: center;
    background: transparent;
    box-sizing: border-box;
    display: inline-flex;
    justify-content: center;    
    vertical-align: middle;
    
    // 11
    &::-moz-focus-inner {
        border: 0;
        padding: 0;
    } 

    &:not(:disabled) { cursor: pointer; }    
    
    // Hover
    // 1. Apply hover style also to focus state
    // 2. Remove default focus style
    // 3. Required for `a` elements     
    &:hover,
    &:focus { // 1
        // 2 
        outline: none;
        // 3 
        text-decoration: none;
    }
}

.mixin(button-style) {
    border-radius: @button-border-radius;    
    font-family: @button-font-family;
    font-weight: @button-font-weight;
    text-transform: @button-text-transform;
    white-space: @button-white-space;    
}

.mixin(button) {
    .mixin(button-reset);
    & when (@button-enable-base-style = true) {
        .mixin(button-style);
    }
    .hook-button;
}

.@{button-ns}button {
    .mixin(button);
}


// Color modifiers
// ==========================================================================

// Modifier: `button--base`

.mixin(button--base) {
    background-color: @button-background;
    color: @button-color;
    .hook-button-base;

    &:hover,
    &:focus {
        background-color: @button-hover-background;
        color: @button-hover-color;
        .hook-button-base-hover;
    }
    
    &:active,
    &.is-active {
        background-color: @button-active-background;
        color: @button-active-color;
        .hook-button-base-active;
    }
}

// Modifier: `button--primary`

.mixin(button--primary) {
    background-color: @button-primary-background;
    color: @button-primary-color;
    .hook-button-primary;

    // Hover
    &:hover,
    &:focus {
        background-color: @button-primary-hover-background;
        color: @button-primary-hover-color;
        .hook-button-primary-hover;
    }

    // Active
    &:active,
    &.is-active {
        background-color: @button-primary-active-background;
        color: @button-primary-active-color;
        .hook-button-primary-active;
    }
}

// Modifier: `button--success`

.mixin(button--success) {
    background-color: @button-success-background;
    color: @button-success-color;
    .hook-button-success;

    // Hover
    &:hover,
    &:focus {
        background-color: @button-success-hover-background;
        color: @button-success-hover-color;
        .hook-button-success-hover;
    }

    // Active
    &:active,
    &.is-active {
        background-color: @button-success-active-background;
        color: @button-success-active-color;
        .hook-button-success-active;
    }
}

// Modifier: `button--danger`

.mixin(button--danger) {
    background-color: @button-danger-background;
    color: @button-danger-color;
    .hook-button-danger;

    // Hover
    &:hover,
    &:focus {
        background-color: @button-danger-hover-background;
        color: @button-danger-hover-color;
        .hook-button-danger-hover;
    }

    // Active
    &:active,
    &.is-active {
        background-color: @button-danger-active-background;
        color: @button-danger-active-color;
        .hook-button-danger-active;
    }
}

& when (@button-enable-modifier-color = true) {

    .@{button-ns}button--base {
        .mixin(button--base);
    }

    .@{button-ns}button--primary {
        .mixin(button--primary);
    }        

    .@{button-ns}button--success {
        .mixin(button--success);
    }

    .@{button-ns}button--danger {
        .mixin(button--danger);
    }
}

// Disabled state
// Overrides also the color modifiers
// ==========================================================================

// Equal for all button types
.@{button-ns}button:disabled {
    background-color: @button-disabled-background;
    color: @button-disabled-color;
    .hook-button-disabled;
}


// Modifier: `button--link`
// ==========================================================================

& when (@button-enable-modifier-link = true) {

     // Reset
    .@{button-ns}button--link,
    .@{button-ns}button--link:hover,
    .@{button-ns}button--link:focus,
    .@{button-ns}button--link:active,
    .@{button-ns}button--link.is-active,
    .@{button-ns}button--link:disabled {
        background: none;
        border-color: transparent;        
        .hook-button-link-reset;
    }

    // Color
    .@{button-ns}button--link { color: @button-link-color; }

    .@{button-ns}button--link:hover,
    .@{button-ns}button--link:focus,
    .@{button-ns}button--link:active,
    .@{button-ns}button--link.is-active {
        color: @button-link-hover-color;
        text-decoration: @button-link-hover-text-decoration;
    }

    .@{button-ns}button--link:disabled { color: @button-link-disabled-color; }

    // Focus
    .@{button-ns}button--link:focus { outline: 1px dotted; }

}


// Size modifiers
// ==========================================================================

.mixin(button--xs) {        
    font-size: @button-xsmall-font-size;
    line-height: @button-xsmall-line-height;
    min-height: @button-xsmall-height;
    padding: @button-xsmall-padding-vertical @button-xsmall-padding-horizontal;
    .hook-button-xs;
}

.mixin(button--sm) {    
    font-size: @button-small-font-size;
    line-height: @button-small-line-height;
    min-height: @button-small-height;
    padding: @button-small-padding-vertical @button-small-padding-horizontal;
    .hook-button-sm;
}

.mixin(button--md) {
    font-size: @button-font-size;
    line-height: @button-line-height;
    min-height: @button-height;
    padding: @button-padding-vertical @button-padding-horizontal;
    .hook-button-md;
}

.mixin(button--lg) {
    font-size: @button-large-font-size;
    line-height: @button-large-line-height;
    min-height: @button-large-height;
    padding: @button-large-padding-vertical @button-large-padding-horizontal;
    .hook-button-lg;
}

.mixin(button--xl) {
    font-size: @button-xlarge-font-size;
    line-height: @button-xlarge-line-height;
    min-height: @button-xlarge-height;
    padding: @button-xlarge-padding-vertical @button-xlarge-padding-horizontal;
    .hook-button-xl;
}

& when (@button-enable-modifier-size = true) {

    .@{button-ns}button--xs {
        .mixin(button--xs);
    }

    .@{button-ns}button--sm {
        .mixin(button--sm);
    }

    .@{button-ns}button--md {
        .mixin(button--md);
    }

    .@{button-ns}button--lg {
        .mixin(button--lg);
    }

    .@{button-ns}button--xl {
        .mixin(button--xl);
    }    
}


// Hooks
// ========================================================================

& { .hook-button-misc; }

.hook-button() {}
.hook-button-base() {}
.hook-button-base-hover() {}
.hook-button-base-active() {}
.hook-button-primary() {}
.hook-button-primary-hover() {}
.hook-button-primary-active() {}
.hook-button-success() {}
.hook-button-success-hover() {}
.hook-button-success-active() {}
.hook-button-danger() {}
.hook-button-danger-hover() {}
.hook-button-danger-active() {}
.hook-button-disabled() {}
.hook-button-link-reset() {}
.hook-button-xs() {}
.hook-button-sm() {}
.hook-button-md() {}
.hook-button-lg() {}
.hook-button-xl() {}
.hook-button-misc() {}